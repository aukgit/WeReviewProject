@model WereViewApp.Models.POCO.IdentityCustomization.Feedback

@{
    ViewBag.Title = "Editing Feedback";
    var token = (MvcHtmlString)@Html.AntiForgeryToken();
}


<h1 class="h2 top-margin-space">
	<span class="glyphicon glyphicon-plus"></span>  
	@ViewBag.Title
</h1>
<hr />
@using (Html.BeginForm("Edit", ViewContext.RouteData.Values["Controller"].ToString(), FormMethod.Post, new { @class = "form-horizontal Create-@ViewBag.Title", role = "form" })) 
{
   <div class="form-horizontal">
		@token
		<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <a href="@Url.Action("Delete", new { id = Model.FeedbackID })" title="Delete this record?" class="btn btn-danger" onclick="return confirm('Are you sure?')"><span class="glyphicon glyphicon-remove"></span> Delete</a>
                    <div class="input-group-btn inline">
                        <button title="Save and create new one" class="btn btn-success"><i class="glyphicon glyphicon-floppy-disk"></i> Save</button>
                    </div>                    
                </div>               
            </div>
        </div>
		@Html.Partial("_SuccessMessage")
		
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

		@Html.HiddenFor(model => model.FeedbackID)
        @Html.EditorFor(model => model.Username)
        @Html.EditorFor(model => model.Name)
        @Html.EditorFor(model => model.Subject)
        @Html.EditorFor(model => model.Message)
        @Html.EditorFor(model => model.Email)
        @Html.EditorFor(model => model.RateUrgency)
        @Html.EditorFor(model => model.Response)
        @Html.EditorFor(model => model.IsViewed)
        @Html.EditorFor(model => model.IsInProcess)
        @Html.EditorFor(model => model.IsSolved)
        @Html.EditorFor(model => model.IsUnSolved)
        @Html.EditorFor(model => model.HasMarkedToFollowUpDate)
        @Html.EditorFor(model => model.PostedDate)
        @Html.EditorFor(model => model.FollowUpdateDate)
        @Html.EditorFor(model => model.FeedbackCategoryID)
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <div class="btn-group">
                    <a href="@Url.Action("Index")" title="Back" class="btn btn-info"><span class="glyphicon glyphicon-chevron-left"></span> Back</a>
                    <a href="@Url.Action("Delete", new { id = Model.FeedbackID })" title="Delete this record?" class="btn btn-danger" onclick="return confirm('Are you sure?')"><span class="glyphicon glyphicon-remove"></span> Delete</a>
                    <div class="input-group-btn inline">
                        <button title="Save and create new one" class="btn btn-success"><i class="glyphicon glyphicon-floppy-disk"></i> Save</button>
                    </div>                    
                </div>               
            </div>
        </div>
    </div>
}

@Html.Partial("_ValidatorCommonForm", new ViewDataDictionary { 
    {"token",token}
})
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
