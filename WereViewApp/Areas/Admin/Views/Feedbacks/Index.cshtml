@using WereViewApp.Models.POCO.IdentityCustomization
@model IEnumerable<Feedback>

@{
    ViewBag.Title = "Feedback";
	string title = ViewBag.Title;
    string subtitle = ViewBag.Title;
	string controller = (string)ViewBag.controller;
    string viewName = "Index";
    string editLinkName = "";
    string editIcon = "fa fa-pencil",
           createButtonIcon = "fa fa-plus",
           detailsIcon = "fa fa-info-circle",
           removeIcon = "fa fa-times";

	/*
	bool noItemsExist = Model == null;
	if (!noItemsExist) {
		noItemsExist = Model.Count() == 0;
	}
	*/
}
@Html.SamePageLinkWithIcon(title, subtitle, "glyphicon glyphicon-th-list")
<div class="top-gap-2x"></div>
<p class="left-button-wrapper">
    <a href="@Url.Action("Create")" title="Create a new item." class="btn btn-warning create-save"><span class="@createButtonIcon"></span> Create</a>
</p>
<table class="table table-hover bootstrap-table-do" data-toggle="table" data-toolbar="#filter-bar" data-show-filter="true" data-show-columns="true" data-search="true" data-show-refresh="true" data-show-toggle="true" data-show-export="true" data-pagination="true">
	<!--<caption>@viewName</caption>-->
	<thead>
		<tr>		
			<th data-field="Username">
				@Html.DisplayNameFor(model => model.Username)
			</th>
			<th data-field="Name">
				@Html.DisplayNameFor(model => model.Name)
			</th>
			<th data-field="Subject">
				@Html.DisplayNameFor(model => model.Subject)
			</th>
			<th data-field="Message">
				@Html.DisplayNameFor(model => model.Message)
			</th>
			<th data-field="Email">
				@Html.DisplayNameFor(model => model.Email)
			</th>
			<th data-field="RateUrgency">
				@Html.DisplayNameFor(model => model.RateUrgency)
			</th>
			<th data-field="Response">
				@Html.DisplayNameFor(model => model.Response)
			</th>
			<th data-field="IsViewed">
				@Html.DisplayNameFor(model => model.IsViewed)
			</th>
			<th data-field="IsInProcess">
				@Html.DisplayNameFor(model => model.IsInProcess)
			</th>
			<th data-field="IsSolved">
				@Html.DisplayNameFor(model => model.IsSolved)
			</th>
			<th data-field="IsUnSolved">
				@Html.DisplayNameFor(model => model.IsUnSolved)
			</th>
			<th data-field="HasMarkedToFollowUpDate">
				@Html.DisplayNameFor(model => model.HasMarkedToFollowUpDate)
			</th>
			<th data-field="PostedDate">
				@Html.DisplayNameFor(model => model.PostedDate)
			</th>
			<th data-field="FollowUpdateDate">
				@Html.DisplayNameFor(model => model.FollowUpdateDate)
			</th>
			<th data-field="HasAppOrReviewReport">
				@Html.DisplayNameFor(model => model.HasAppOrReviewReport)
			</th>
			<th data-field="FeedbackCategoryID">
				@Html.DisplayNameFor(model => model.FeedbackCategoryID)
			</th>
			<th></th>
		</tr>
	</thead>
	<tbody>
		@foreach (var item in Model) {
			<tr>
		
				<td>
					@{
                        editLinkName = Html.DisplayFor(model => item.Username).ToString();
                        var idValue = item.FeedbackID;
                     }
					<a href="@Url.Action("Edit", new { id= idValue })" title="@editLinkName edit..."><span class="@editIcon"></span> @editLinkName</a>
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Name)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Subject)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Message)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Email)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.RateUrgency)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.Response)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.IsViewed)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.IsInProcess)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.IsSolved)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.IsUnSolved)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.HasMarkedToFollowUpDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.PostedDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FollowUpdateDate)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.HasAppOrReviewReport)
				</td>
				<td>
					@Html.DisplayFor(modelItem => item.FeedbackCategoryID)
				</td>
				<td>			
					<a href="@Url.Action("Edit", new { id = idValue })" title="Edit @editLinkName" class="btn btn-info btn-xs"><span class="@editIcon"></span> Edit</a>
					<a href="@Url.Action("Details", new { id = idValue })" title="Details of @editLinkName." class="btn btn-warning btn-xs"><span class="@detailsIcon"></span> Details</a>
					<a href="@Url.Action("Delete", new { id =idValue })" title="Delete @editLinkName" class="btn btn-danger btn-xs" onclick="return confirm('Are you sure?')"><span class="@removeIcon"></span> Delete</a>            
				</td>
			</tr>
		}
	</tbody>

</table>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
