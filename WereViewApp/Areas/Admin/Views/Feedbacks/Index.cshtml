@using WereViewApp.Models.POCO.IdentityCustomization
@using WereViewApp.Models.EntityModel.ExtenededWithCustomMethods

@model IEnumerable<Feedback>

@{
    ViewBag.Title = "Feedback";
    string title = ViewBag.Title;
    string subtitle = ViewBag.Title;
    string controller = (string)ViewBag.controller;
    string viewName = "Index";
    string editLinkName = "";
    string editIcon = "fa fa-reply",
           createButtonIcon = "fa fa-plus",
           detailsIcon = "fa fa-info-circle",
           removeIcon = "fa fa-eye";

    var paginationHtml = new MvcHtmlString(ViewBag.paginationHtml);
    /*
    bool noItemsExist = Model == null;
    if (!noItemsExist) {
        noItemsExist = Model.Count() == 0;
    }
    */
}
@Html.SamePageLinkWithIcon(title, subtitle, "glyphicon glyphicon-th-list")
<div class="right">
    <ul class="list-inline">
        <li><i class="fa-em-13 fa fa-filter"></i></li>
        <li class="btn btn-info">@Html.ActionLink("Latest", "Index")</li>
        <li class="btn btn-info">@Html.ActionLink("Is Viewed", "IsViewed")</li>
        <li class="btn btn-info">@Html.ActionLink("Solved", "Solved")</li>
        <li class="btn btn-info">@Html.ActionLink("Unsolved", "UnSolved")</li>
        <li class="btn btn-info">@Html.ActionLink("Is in Process", "IsInProcess")</li>
        <li class="btn btn-info">@Html.ActionLink("Solved", "Solved")</li>
    </ul>
</div>
<div class="top-gap-2x"></div>
<div class="top-gap-2x"></div>

<table class="table table-hover bootstrap-table-do">
    <!--<caption>@viewName</caption>-->
    <thead>
    <tr>
        <th data-field="Email">
            @Html.DisplayNameFor(model => model.Email)
        </th>
        <th data-field="Subject">
            @Html.DisplayNameFor(model => model.Subject)
        </th>
        <th data-field="RateUrgency">
            @Html.DisplayNameFor(model => model.RateUrgency)
        </th>
        <th data-field="Response">
            @Html.DisplayNameFor(model => model.Response)
        </th>
        <th data-field="Category">
            Category | Status
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr title="@Html.Truncate(item.Message, AppConfig.TruncateLength)">
            <td>
                @{
                    editLinkName = Html.DisplayFor(model => item.Email).ToString();
                    var idValue = item.FeedbackID;
                    var status = @item.GetStatus();
                }
                <a href="@Url.Action("Edit", new {id = idValue})" title="@editLinkName edit..."><span class="@editIcon"></span> @editLinkName</a>
            </td>
            <td>
                @Html.Truncate(item.Subject, AppConfig.TruncateLength + 60)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.RateUrgency)
            </td>
            <td>
                <a href="@Url.Action("Reply", new {id = idValue})" t title="Reply to @editLinkName." class="btn btn-warning btn-xs">
                    @if (string.IsNullOrEmpty(item.Response)) {
                        <span class="@editIcon"></span>
                        <text>Write</text>
                    } else {
                        <span class="@detailsIcon"></span>
                        @Html.Truncate(item.Response, AppConfig.TruncateLength - 12)
                    }
                </a>
            </td>
            <td>
                <label class="btn btn-xs btn-info">@item.GetCategory()</label> | <label class="btn btn-xs btn-@status.StyleClass">@status.Status</label>
            </td>
            <td>
                <a href="@Url.Action("Reply", new {id = idValue})" title="Reply to @editLinkName" class="btn btn-success btn-xs"><span class="@editIcon"></span> Reply</a>
                <a href="@Url.Action("Viewed", new {id = idValue})" title="Marked as @editLinkName viewed." class="btn btn-info btn-xs" onclick=" return confirm('Are you sure?') "><span class="@removeIcon"></span> Marked as Viewed</a>
            </td>
        </tr>
    }
    </tbody>

</table>
<div>
    <div class="center">
        <ul class="pagination">
            @paginationHtml
        </ul>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
