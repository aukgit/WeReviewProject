using System;
using System.Collections.Generic;

using System.Data.Entity;
using System.Linq;
using System.Net;
using System.Web;
using System.Web.Mvc;
using WereViewApp.Models.Context;
using WereViewApp.Models.POCO.IdentityCustomization;
using WereViewApp.Controllers;

namespace WereViewApp.Areas.Admin.Controllers {
    public class FeedbackCategoriesController : BasicController {
        // Generated by Alim Ul Karim on behalf of Developers Organism.
        // Find us developers-organism.com
        // https://www.facebook.com/DevelopersOrganism
        // mailto:info@developers-organism.com

        public FeedbackCategoriesController()
            : base(true) {

        }

        public void GetDropDowns() {
        }

        public ActionResult Index() {
            return View(Db.FeedbackCategories.ToList());
        }

        public ActionResult Details(System.Byte id) {
            if (id == null) {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            var feedbackCategory = Db.FeedbackCategories.Find(id);
            if (feedbackCategory == null) {
                return HttpNotFound();
            }
            return View(feedbackCategory);
        }


        public ActionResult Create() {
            return View();
        }

        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Create(FeedbackCategory feedbackCategory) {
            GetDropDowns();
            if (ModelState.IsValid) {
                Db.FeedbackCategories.Add(feedbackCategory);
                Db.SaveChanges();

                AppVar.SetSavedStatus(ViewBag);
                return View(feedbackCategory);
            }

            AppVar.SetErrorStatus(ViewBag);
            return View(feedbackCategory);
        }

        public ActionResult Edit(System.Byte id) {
            if (id == null) {
                return new HttpStatusCodeResult(HttpStatusCode.BadRequest);
            }
            var feedbackCategory = Db.FeedbackCategories.Find(id);
            if (feedbackCategory == null) {
                return HttpNotFound();
            }
            GetDropDowns();
            return View(feedbackCategory);
        }



        [HttpPost]
        [ValidateAntiForgeryToken]
        public ActionResult Edit(FeedbackCategory feedbackCategory) {
            GetDropDowns();
            if (ModelState.IsValid) {
                Db.Entry(feedbackCategory).State = EntityState.Modified;
                Db.SaveChanges();
                return RedirectToAction("Index");
            }

            AppVar.SetErrorStatus(ViewBag);
            return View(feedbackCategory);
        }


        public ActionResult Delete(byte id) {
            var feedbackCategory = Db.FeedbackCategories.Find(id);
            Db.FeedbackCategories.Remove(feedbackCategory);
            Db.SaveChanges();
            return RedirectToAction("Index");
        }


    }
}
