@model Boolean?
@{
    var isRequired = ViewData.ModelMetadata.IsRequired;
    string isRequiredStar = isRequired ? "*" : "",
        prop = ViewData.ModelMetadata.PropertyName.ToString(),
        propLower = prop.ToLower(),
        styleProperty = propLower,
        displayName = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName,
        description = ViewData.ModelMetadata.Description;
    var htmlAttributes = new RouteValueDictionary();
    if (@displayName == null) {
        ViewData.ModelMetadata.DisplayName = ViewData.ModelMetadata.PropertyName;
    }
    if (ViewBag.@class != null) {
        htmlAttributes.Add("class", ViewBag.@class);
    }

    if (ViewBag.@type != null) {
        htmlAttributes.Add("type", ViewBag.@type);
    }

    if (ViewBag.placeholder != null) {
        htmlAttributes.Add("placeholder", ViewBag.placeholder);
    } else {
        htmlAttributes.Add("placeholder", displayName + isRequiredStar);
    }
    if (ViewBag.label != null) {
        displayName = ViewBag.label;
    }

    if (ViewBag.labelColumn == null) {
        ViewBag.labelColumn = "col-md-offset-2";
    }
    if (ViewBag.textColumn == null) {
        ViewBag.textColumn = "col-md-10";
    }
    htmlAttributes.Add("title", htmlAttributes["placeholder"]);
}

<div class="form-group form-row @styleProperty" data-prop="@styleProperty">
    <div class="controls dev-plugin plugin-container rememberme-type">
        <div class="@ViewBag.labelColumn @ViewBag.textColumn remember-me-box">
            <label class="control-label form-label @styleProperty" for="@ViewData.ModelMetadata.PropertyName">
                @Html.CheckBox("", Model.HasValue && Model.Value, htmlAttributes)
                @displayName
            </label>
            @Html.ValidationMessageFor(m => m, null, new {@class = "rounded-3 label label-danger fixed-width-294 validation-box"})
            <div class="pull-right">
                <button title="Sign in" class="btn btn-primary"><i class="fa fa-sign-in"></i> Login</button>
            </div>
        </div>
    </div>
</div>