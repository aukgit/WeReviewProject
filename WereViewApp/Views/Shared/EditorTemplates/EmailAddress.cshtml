@model object?
@{
    bool isRequired = ViewData.ModelMetadata.IsRequired;
    string isRequiredStar = isRequired ? "*" : "",
        prop = ViewData.ModelMetadata.PropertyName.ToString(),
        propLower = prop.ToLower(),
        styleProperty = propLower,
        displayName = ViewData.ModelMetadata.DisplayName ?? ViewData.ModelMetadata.PropertyName,
        description = ViewData.ModelMetadata.Description;


    var htmlAttributes = new RouteValueDictionary();
    
    if (ViewBag.@class != null) {
        htmlAttributes.Add("class", "form-control " + ViewBag.@class);
    } else {
        htmlAttributes.Add("class", "form-control");
    }

    if (ViewBag.type != null) {
        htmlAttributes.Add("type", ViewBag.type);
    } else {
        htmlAttributes.Add("type", "email");
    }

    if (ViewBag.placeholder != null) {
        htmlAttributes.Add("placeholder", ViewBag.placeholder);
    } else {
        if (isRequired) {
            htmlAttributes.Add("placeholder", displayName + isRequiredStar);
        } else {
            htmlAttributes.Add("placeholder", "[" + displayName + "]");
        }
    }   
    if (ViewBag.label == null) {
        ViewBag.label = displayName;
    }

    if (ViewBag.labelColumn == null) {
        ViewBag.labelColumn = "col-md-2";
    }
    if (ViewBag.textColumn == null) {
        ViewBag.textColumn = "col-md-10";
    }
    if (ViewBag.Value != null) {
        htmlAttributes.Add("Value", ViewBag.Value);
    }
    htmlAttributes.Add("title", htmlAttributes["placeholder"]);
}

<div class="form-group form-row @styleProperty"  data-prop="@styleProperty">
    <div class="controls dev-plugin plugin-container email-type">
        <label class="@ViewBag.labelColumn control-label form-label @styleProperty" for="@styleProperty" data-prop="@styleProperty">
            @ViewBag.label<span class="red">@isRequiredStar</span>
        </label>
        <div class="@ViewBag.textColumn form-input @styleProperty" data-prop="@styleProperty">
            <span class="inner-addon left-addon">
                <i class="fa fa-envelope-o"></i>
                @Html.TextBox("", ViewData.TemplateInfo.FormattedModelValue, htmlAttributes)
            </span>
            @if (description != null) {
                <a data-toggle="tooltip" data-original-title="@description" title="@description" class="tooltip-show">
                    <span class="description-icon"></span>
                </a>
            }
            <a data-toggle="tooltip" title="Validating" data-original-title="Validating" class="tooltip-show CustomValidation @ViewData.ModelMetadata.PropertyName no-hover">
                <span data-display="@ViewData.ModelMetadata.DisplayName" class="CustomValidation @ViewData.ModelMetadata.PropertyName glyphicon glyphicon-refresh glyphicon-spin hide" title="Validating"></span>
            </a>
            @Html.ValidationMessageFor(m => m, null, new {@class = "rounded-3 label label-danger fixed-width-294 validation-box"})
        </div>
    </div>
</div>