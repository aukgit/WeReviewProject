@model WereViewApp.Models.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
    SelectList roles = null;
    var token = Html.AntiForgeryToken();
    string usernameValidatingUrl = "/Validator/GetUsername";
    string emailValidatingUrl = "/Validator/GetEmail";
}

<h1 class="h3" title="Registration page of @AppVar.Name">@ViewBag.Title</h1>
<h1 class="h5">
    Create a new account for <strong class="@AppVar.Name">@AppVar.Name</strong>.
    Developers use this form to register their accounts as an app developer. If you not wish to register now
    alternatively you can easily add your application by submitting app url link.
</h1>
<hr />
@Html.Partial("_GlobalError")
@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal register-form", role = "form", enctype = "multipart/form-data" })) {
    <!--uxSlide by developers-organism and Alim Ul Karim hides everything except for first item=0, we can have more than one zeros-->
    <div id="register-form">
        <div id="server-validation-form">
            <div data-dev-slide="0" data-dev-visited='false'>
                @token
                @Html.EditorFor(m => m.UserName, "Username", new { url = usernameValidatingUrl, isValidate = "true", data_submit_method = "post" })
                @Html.EditorFor(m => m.FirstName)
                @Html.EditorFor(m => m.LastName)
                @Html.EditorFor(m => m.Email, "Email", new { url = emailValidatingUrl, isValidate = "true", data_submit_method = "post" })
                @Html.EditorFor(m => m.Password)
                @Html.EditorFor(m => m.ConfirmPassword)
            </div>
        </div>
        <div data-dev-slide="1" data-dev-visited='false'>
            @Html.EditorFor(m => m.Phone, "Phone")
        </div>
        <div class="form-group">
            <div class="col-md-10 col-md-offset-2">
                <button type="submit" class="btn btn-success">
                    <i class="fa fa-user"></i>
                    Register
                </button>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
